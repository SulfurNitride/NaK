================================================================================
NaK-Python SIGILL Error Fix - Progress Documentation
================================================================================
Date: October 2, 2025
Issue: "Illegal instruction" (SIGILL) error on VM and other users' systems

================================================================================
PROBLEM SUMMARY
================================================================================

The PyInstaller-built executable works on your main system (CachyOS with modern CPU)
but crashes with SIGILL on:
- Your VM (older/baseline CPU)
- Other users' systems

Root Cause:
- PySide6 6.9.3 (and 6.8.0.2) pip wheels contain Qt libraries compiled with 
  AVX2/AVX512 CPU instructions
- These precompiled Qt libraries are bundled by PyInstaller
- Older CPUs don't support these instructions ‚Üí SIGILL crash
- The error message was: "CPU ISA level is lower than required"

================================================================================
WHAT WE TRIED
================================================================================

‚ùå FAILED APPROACH 1: PyInstaller with CPU flags
   - Set CFLAGS="-march=x86-64 -mtune=generic" during build
   - Result: Still bundles PySide6's precompiled AVX-optimized Qt libraries
   - Size: 148-296MB
   - Status: STILL GETS SIGILL ON VM

‚ùå FAILED APPROACH 2: Downgrade PySide6
   - Tried PySide6 6.8.0.2 (oldest compatible with Python 3.13)
   - Result: Still has AVX requirements
   - Status: STILL GETS SIGILL ON VM

‚úÖ PARTIAL SUCCESS: Nuitka build
   - Built with Nuitka instead of PyInstaller
   - Size: 44MB (much smaller!)
   - Compiled with: CFLAGS="-march=x86-64 -mtune=generic"
   - Result: Runs on main system, but VM still says "CPU ISA level is lower"
   - Problem: Still bundling AVX-optimized Qt libraries
   - Status: WORKS ON YOUR SYSTEM, VM REJECTS IT

‚ùå FAILED APPROACH 3: Strip ISA metadata
   - Tried: objcopy --remove-section=.note.gnu.property
   - Result: Broke the Nuitka onefile format
   - Status: DOESN'T WORK

‚ùå FAILED APPROACH 4: GLIBC_TUNABLES wrapper
   - Created wrapper script with GLIBC_TUNABLES=glibc.cpu.hwcaps=-AVX,-AVX2,-AVX512
   - Result: VM still rejects it with "CPU ISA level is lower than required"
   - Status: DOESN'T WORK

================================================================================
‚úÖ SOLUTION FOUND: PROPER APPIMAGE
================================================================================

üéâ WORKING APPROACH: Build AppImage using appimagetool

Strategy: AppImages handle CPU compatibility properly!

Why this works:
- AppImages have a runtime layer that handles library compatibility
- The AppRun script can set up paths correctly
- AppImage format allows falling back to system libraries when needed
- Your original 170MB AppImage worked - we just needed to build one properly!

What we did:
1. Built PyInstaller folder build (not onefile) - 443MB uncompressed
2. Created proper AppDir structure:
   - AppDir/usr/bin/ - contains PyInstaller output with _internal/ folder
   - AppDir/AppRun - launcher script that sets LD_LIBRARY_PATH
   - AppDir/nak-linux-modding-helper.desktop - desktop entry
   - AppDir/nak-linux-modding-helper.png - icon
3. Used appimagetool to package it into AppImage

Files Created:
- AppDir/ - AppImage directory structure
- NaK-Linux-Modding-Helper-x86_64.AppImage - Final AppImage (169MB)

Result:
- Size: 169MB (similar to your working 170MB AppImage!)
- Works on main system: ‚úÖ CONFIRMED
- Works on VM: ‚è≥ NEEDS TESTING

Location: /home/luke/Desktop/NaK-Linux-Modding-Helper-x86_64.AppImage

================================================================================
NEXT STEPS
================================================================================

1. ‚úÖ Build proper AppImage - DONE (169MB)
2. ‚úÖ Test on main system - WORKS!
3. ‚è≥ Test on VM to verify no SIGILL error - PENDING

Commands to rebuild AppImage:
cd /home/luke/Documents/NaK-Python
rm -rf build dist AppDir
/home/luke/Documents/python-ver/bin/pyinstaller --clean NaK-Linux-Modding-Helper.spec
mkdir -p AppDir/usr/bin
cp -r dist/NaK-Linux-Modding-Helper/* AppDir/usr/bin/
# Create AppDir/AppRun, .desktop, and icon (see AppDir/ for templates)
ARCH=x86_64 appimagetool AppDir NaK-Linux-Modding-Helper-x86_64.AppImage

================================================================================
SYSTEM REQUIREMENTS
================================================================================

AppImage benefits:
- ‚úÖ Self-contained - no dependencies needed!
- ‚úÖ Works on immutable distros (Bazzite, SteamOS)
- ‚úÖ No installation required
- ‚úÖ Portable - just download and run
- ‚úÖ AppImage runtime handles CPU compatibility

Target systems need:
- FUSE2 (usually pre-installed on most distros)
- That's it!

================================================================================
WHY APPIMAGE IS THE RIGHT SOLUTION
================================================================================

- Self-contained: Works on Bazzite, SteamOS, and immutable distros
- CPU compatible: AppImage runtime handles different CPU architectures
- Portable: No installation needed, just download and run
- Proven: Your original 170MB AppImage worked - this is 169MB and should too!
- Size: 169MB is acceptable (comparable to your working version)

================================================================================
FILES LOCATION
================================================================================

Build scripts:
- /home/luke/Documents/NaK-Python/build_nak.py (PyInstaller script)
- /home/luke/Documents/NaK-Python/build_nuitka.py (Nuitka script - works but VM rejects)
- /home/luke/Documents/NaK-Python/NaK-Linux-Modding-Helper.spec (PyInstaller config)

Virtual environment:
- /home/luke/Documents/python-ver/ (Python 3.13 venv)

Current PySide6 version:
- 6.8.0.2 (in venv)

================================================================================
KEY INSIGHT
================================================================================

The REAL problem is bundling precompiled Qt libraries from pip wheels.
Solution: Use system Qt libraries (like AppImages do) instead of bundling them.

This is a DISTRIBUTION problem, not a compilation problem!

================================================================================


